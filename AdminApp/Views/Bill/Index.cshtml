@{
    ViewBag.Title = "Hóa đơn";

}
<span id="notification" style="display:none;">222</span>
<div>
    <div id="gridBill"></div>
</div>
<br />
@* <div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
            <div class="modal-body">
            <div id="detailsGrid"></div>
            </div>
    </div>
</div> *@
<div id="myModal" class="modal fade" role="dialog" data-backdrop="static">
    <div class="modal-dialog">
        <div id="detailsGrid"> <div id="TongTienThanhToan"></div></div>
        <div class="modal-body">
        </div>
    </div>
</div>



@section scripts {
    <link href="https://kendo.cdn.telerik.com/2021.3.914/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="https://kendo.cdn.telerik.com/2021.3.914/styles/kendo.default.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.3.914/js/kendo.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        kendo.pdf.defineFont({
            "DejaVu Sans": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans.ttf",
            "DejaVu Sans|Bold": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
            "DejaVu Sans|Bold|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "DejaVu Sans|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "WebComponentsIcons": "https://kendo.cdn.telerik.com/2017.1.223/styles/fonts/glyphs/WebComponentsIcons.ttf"
        });
    </script>

    <script>
        $(document).ready(function () {
            var grid;
            var dataSource = new kendo.data.DataSource({
                data: [], // null
            });
            grid = $("#newGrid").kendoGrid({
                dataSource: dataSource,
                columns: [
                    {
                        field: "maProductDetail",
                        title: "Mã sản phẩm",
                    },
                    {
                        field: "nameProduct",
                        title: "Tên sản phẩm",
                    },
                    {
                        field: "price",
                        title: "Giá",
                        editable: true
                    },

                    {
                        field: "quantity",
                        title: "Số lượng",
                    },
                ],
                width: "800px", // Đặt chiều rộng
                height: "700px", // Đặt chiều cao
                editable: {
                    mode: "popup",
                    window: { width: 550, height: 500 }, // Chỉnh chiều rộng ở đây
                },
            }).data("kendoGrid");
            //end
            // Function hiển thị thông báo
            function showNotification(message, type) {
                toastr.options = {
                    positionClass: "toast-top-right", // Điều chỉnh vị trí của thông báo
                    closeButton: true // Hiển thị nút đóng thông báo
                };
                // Hiển thị thông báo theo loại
                if (type === "success") {
                    toastr.success(message);
                } else {
                    toastr.error(message);
                }
            }
            $("#gridBill").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "/Bill/GetListBills",
                            type: "GET",
                            dataType: "json"
                        },
                        create: {
                            url: "/",
                            type: "POST",
                            dataType: "json",

                        },
                        update: {
                            url: "/Bill/EditBill",
                            type: "PUT",
                            dataType: "json"
                        },
                        destroy: {
                            url: "/",
                            type: "DELETE",
                            dataType: "json"
                        },

                    },
                    schema: {
                        data: "result",
                        total: "count",
                        model: {
                            id: "id",
                            fields: {
                                invoiceCode: { type: "string", validation: { required: true }, editable: false },
                                createDate: { type: "date", editable: false },
                                thongSo: { type: "string", validation: { required: true } },
                                status: { type: "int", validation: { required: true } }
                            }
                        }
                    },

                    pageSize: 20,

                },
                height: 550,
                groupable: false,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: [5, 10, 20, "All"],
                    buttonCount: 3,
                    messages: {
                        itemsPerPage: "Số dòng trên mỗi trang",
                        display: "{0}-{1} trong {2} dòng"
                    }
                },

                toolbar: [
                    // {
                    //      name: "create",
                    //      text: "Thêm",

                    // },

                    "pdf"],
                pdf: {
                    allPages: true,
                    avoidLinks: true,
                    paperSize: "A4",
                    margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                    landscape: true,
                    repeatHeaders: true,
                    template: $("#page-template").html(),
                    scale: 0.8,
                },
                editable: {
                    mode: "popup",
                    window: { width: 550, height: 500 }, // Chỉnh chiều rộng ở đây
                },
                dataBound: function (e) {
                    var grid = e.sender;
                    grid.tbody.find("tr").each(function () {
                        var dataItem = grid.dataItem(this);
                        var button = $(this).find("td a.k-button:contains('Xem')");

                        button.click(function (e) {
                            e.preventDefault();

                            // Fetch the details data for the clicked row
                            $.ajax({
                                type: "GET",
                                url: "/Bill/GetListBillDetailByInvoiceCode", // Replace with the actual API URL
                                data: { invoiceCode: dataItem.invoiceCode }, // Pass any required parameters
                                success: function (detailsData) {

                                    calculateTotalAmount(detailsData.result);

                                    console.log(calculateTotalAmount(detailsData.result));
                                    // Update the value wherever you need it
                                    $("#TongTienThanhToan").text("Tổng tiền thanh toán: " + calculateTotalAmount(detailsData.result));
                                    // Create a new Kendo Grid for details
                                    var detailsGrid = $("#detailsGrid").kendoGrid({
                                        dataSource: {
                                            data: detailsData.result,
                                        },
                                        columns: [
                                            {
                                                field: "codeProductDetail",
                                                title: "Mã sản phẩm",
                                            },
                                            {
                                                field: "nameProduct",
                                                title: "Tên sản phẩm",
                                            },
                                            {
                                                field: "price",
                                                title: "Giá",
                                            },
                                            {
                                                field: "quantity",
                                                title: "Số lượng",
                                            },
                                            {
                                                command: [
                                                    {
                                                        name: "edit",
                                                        text: "Sửa",
                                                    },
                                                    {
                                                        name: "destroy",
                                                        text: "Xóa",
                                                    }
                                                ],
                                                title: "Hành động",
                                                width: "250px",
                                                exportable: false
                                            }
                                        ],
                                        editable: false,
                                    }).data("kendoGrid");

                                    // Show the details grid in a modal or another container as needed
                                    $("#myModal").modal("show");
                                },
                                error: function () {
                                    alert("Lỗi khi gọi API.");
                                }
                            });
                        });
                    });
                },

                save: function (e) {
                    if (e.model.isNew()) {
                        // Thay đổi status thành biến thực tế của bạn
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái

                        if (status === 'success') {
                            Response
                            showNotification("Lưu thành công", "success");
                        } else {
                            showNotification("Lưu thất bại", "error");
                        }
                    } else if (e.model.dirty) {
                        // Trường hợp cập nhật
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái
                        console.log(e.model.invoiceCode);


                        if (status === 'success') {
                            showNotification("Cập nhật thành công", "success");
                            totalAmount = 25000000;


                        } else {
                            showNotification("Cập nhật thất bại", "error");
                        }
                        // $.ajax({
                        //     type: "POST",
                        //     url: "https://localhost:44333/api/ChucNangTichDiem/TichDiemMuaHangAsync?invoiceCode=" + e.model.invoiceCode + "&TongTienThanhToan=" + totalAmount,
                        //     success: function (response) {
                        //         console.log(response);

                        //     },
                        //     error: function (xhr, status, error) {
                        //         console.error(xhr.responseText);
                        //         alert("Lỗi khi gọi API. Xem log để biết thêm chi tiết.");
                        //     }
                        // });
                    } else if (e.model.isNew() && e.model.isDestroyed()) {
                        // Trường hợp xóa
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái

                        if (status === 'success') {
                            showNotification("Xóa thành công", "success");
                        } else {
                            showNotification("Xóa thất bại", "error");
                        }
                    }
                },
                columns: [
                    {
                        field: "invoiceCode",
                        title: "Mã hóa đơn",
                    },
                    {
                        field: "fullName",
                        title: "Họ tên"
                    },

                    {
                        field: "address",
                        title: "Địa chỉ"
                    },
                    {
                        field: "phoneNumber",
                        title: "Số điện thoại"
                    },
                    {
                        field: "createDate",
                        title: "Ngày mua",
                        template: function (dataItem) {
                            // Chuyển đổi ngày thành đối tượng Date
                            const createDateUtc = new Date(dataItem.createDate);
                            // Đặt offset của múi giờ của Việt Nam (UTC+7)
                            const vnTimeOffset = 7;
                            // Thêm offset vào ngày tạo
                            const createDateVn = new Date(createDateUtc.getTime() + vnTimeOffset * 60 * 60 * 1000);
                            // Định dạng ngày theo định dạng mong muốn (ví dụ: "yyyy-MM-dd HH:mm:ss")
                            return kendo.toString(createDateVn, "dd-MM-yyyy HH:mm:ss");
                        },
                    },
                    {
                        field: "status",
                        title: "Trạng thái",
                        editor: function (container, options) {
                            var input = $("<input name='" + options.field + "' />");
                            input.appendTo(container);
                            console.log(options.field);
                            input.kendoDropDownList({
                                dataSource: [
                                    { text: "Đã xóa", value: 0 },
                                    { text: "Chờ xác nhận", value: 1 },
                                    { text: "Chưa thanh toán - Chưa giao hàng", value: 2 },
                                    { text: "Chưa thanh toán - Đang giao hàng", value: 3 },
                                    { text: "Đã thanh toán - Chưa giao hàng", value: 4 },
                                    { text: "Chưa thanh toán - Giao thất bại", value: 5 },
                                    { text: "Đã thanh toán - Giao thất bại", value: 6 },
                                    { text: "Đã hoàn thành", value: 7 },
                                    { text: "Chờ đổi trả", value: 8 },
                                ],
                                dataTextField: "text",
                                dataValueField: "value",
                                value: options.model.status || 1,
                                change: function (e) {
                                    console.log("Selected value:", options.model.status.value);
                                    console.log("this value:", this.value());
                                    options.model.status = this.value();
                                }
                            });
                        },

                        template: function (dataItem) {
                            // Hiển thị văn bản tương ứng với giá trị status
                            return getStatusText(dataItem.status);
                        }
                    },
                    {
                        command: [
                            {
                                name: "edit",
                                text: "Sửa",
                            },
                            {
                                name: "destroy",
                                text: "Xóa",
                            },
                            {
                                name: "details",
                                text: "Xem",
                            },
                        ],
                        title: "Hành động",
                        width: "250px",
                        exportable: false
                    }
                ],

            });
        });


        function getStatusText(status) {
            switch (status) {
                case 0: return "Đã xóa";
                case 1: return "Chờ xác nhận";
                case 2: return "Chưa thanh toán - Chưa giao hàng";
                case 3: return "Chưa thanh toán - Đang giao hàng";
                case 4: return "Đã thanh toán - Chưa giao hàng";
                case 5: return "Chưa thanh toán - Giao thất bại";
                case 6: return "Đã thanh toán - Giao thất bại";
                case 7: return "Đã hoàn thành";
                case 8: return "Chờ đổi trả";
                default: return "Không xác định trạng thái";
            }
        }

        var totalAmount = 0;
        button.click(function (e) {
            e.preventDefault();

            // Fetch the details data for the clicked row
            $.ajax({
                type: "GET",
                url: "/Bill/GetListBillDetailByInvoiceCode",
                data: { invoiceCode: dataItem.invoiceCode },
                success: function (detailsData) {
                    // Calculate total amount
                    calculateTotalAmount(detailsData.result);

                    // Rest of your code...
                },
                error: function () {
                    alert("Lỗi khi gọi API.");
                }
            });
        });



        function calculateTotalAmount(data) {
            var totalAmount = 0;

            for (var i = 0; i < data.length; i++) {
                totalAmount += data[i].price * data[i].quantity;
            }

            return totalAmount;
        }




    </script>
}









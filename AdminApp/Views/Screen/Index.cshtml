@{
    ViewBag.Title = "Screen";

}
<span id="notification" style="display:none;">222</span>
<div id="example">
    <div id="grid"></div>
</div>
<br />

@section scripts {
    <link href="https://kendo.cdn.telerik.com/2021.3.914/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="https://kendo.cdn.telerik.com/2021.3.914/styles/kendo.default.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.3.914/js/kendo.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        /*
            This demo renders the grid in "DejaVu Sans" font family, which is
            declared in kendo.common.css. It also declares the paths to the
            fonts below using <tt>kendo.pdf.defineFont</tt>, because the
            stylesheet is hosted on a different domain.
        */
        // Fix xuất file PDF
        kendo.pdf.defineFont({
            "DejaVu Sans": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans.ttf",
            "DejaVu Sans|Bold": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
            "DejaVu Sans|Bold|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "DejaVu Sans|Italic": "https://kendo.cdn.telerik.com/2016.2.607/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "WebComponentsIcons": "https://kendo.cdn.telerik.com/2017.1.223/styles/fonts/glyphs/WebComponentsIcons.ttf"
        });
    </script>

    <script>
        $(document).ready(function () {

            // Function hiển thị thông báo
            function showNotification(message, type) {
                toastr.options = {
                    positionClass: "toast-top-right", // Điều chỉnh vị trí của thông báo
                    closeButton: true // Hiển thị nút đóng thông báo
                };

                // Hiển thị thông báo theo loại
                if (type === "success") {
                    toastr.success(message);
                } else {
                    toastr.error(message);
                }
            }

            $("#grid").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "/Screen/GetScreen",
                            type: "GET",
                            dataType: "json"
                        },
                        create: {
                            url: "/Screen/CreateScreen",
                            type: "POST",
                            dataType: "json",

                        },
                        update: {
                            url: "/Screen/UpdateScreen",
                            type: "PUT",
                            dataType: "json"
                        },
                        destroy: {
                            url: "/Screen/DeleteScreen2",
                            type: "DELETE",
                            dataType: "json"
                        },

                    },
                    schema: {
                        data: "result",
                        total: "count", // Chỉ định tên trường tổng số dòng,
                        model: {
                            id: "id",
                            fields: {
                                ma: { type: "string", validation: { required: true } },
                                kichCo: { type: "string", validation: { required: true } },
                                tanSo: { type: "string", validation: { required: true } },
                                chatLieu: { type: "string", validation: { required: true } },
                                

                                //  status: { type: "int" }
                            }
                        }
                    },

                    pageSize: 20,

                },
                height: 550,
                groupable: false,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: [5, 10, 20, "All"],
                    buttonCount: 3,
                    messages: {
                        itemsPerPage: "Số dòng trên mỗi trang",
                        display: "{0}-{1} trong {2} dòng"
                    }
                },

                toolbar: [
                    {
                        name: "create",
                        text: "Thêm", /* Thay đổi văn bản của nút "Thêm" */

                    },

                    "pdf","search"],
                pdf: {
                    allPages: true,
                    avoidLinks: true,
                    paperSize: "A4",
                    margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                    landscape: true,
                    repeatHeaders: true,
                    template: $("#page-template").html(),
                    scale: 0.8,
                },
                editable: {
                    mode: "popup",
                    window: { width: 480, height: 390 }, // Chỉnh chiều rộng ở đây
                },


                save: function (e) {
                    if (e.model.isNew()) {
                        // Thay đổi status thành biến thực tế của bạn
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái

                        if (status === 'success') {
                            Response
                            showNotification("Lưu thành công", "success");
                        } else {
                            showNotification("Lưu thất bại", "error");
                        }
                    } else if (e.model.dirty) {
                        // Trường hợp cập nhật
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái

                        if (status === 'success') {
                            showNotification("Cập nhật thành công", "success");
                        } else {
                            showNotification("Cập nhật thất bại", "error");
                        }
                    } else if (e.model.isNew() && e.model.isDestroyed()) {
                        // Trường hợp xóa
                        var status = 'success'; // hoặc 'error' tùy theo trạng thái

                        if (status === 'success') {
                            showNotification("Xóa thành công", "success");
                        } else {
                            showNotification("Xóa thất bại", "error");
                        }
                    }
                },

                columns: [
                    {

                        field: "ma",
                        title: "Mã", operator: "contains", filterable: { multi: true, search: true }
                    },
                    {
                        field: "kichCo",
                        title: "Kích cỡ"
                    }, 
                    {
                        field: "tanSo",
                        title: "Tần Số"
                    }, {
                        field: "chatLieu",
                        title: "Chất liệu"
                    },
                    {
                        command: [
                            {
                                name: "edit",
                                text: "Sửa",
                            },
                            {
                                name: "destroy",
                                text: "Xóa",
                            },
                        ],
                        title: "Hành động",
                        width: "250px",
                        exportable: false
                    }
                ],

            });
        });
    </script>
}








